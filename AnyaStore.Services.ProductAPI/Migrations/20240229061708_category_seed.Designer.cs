// <auto-generated />
using System;
using AnyaStore.Services.ProductAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AnyaStore.Services.ProductAPI.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240229061708_category_seed")]
    partial class category_seed
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AnyaStore.Services.ProductAPI.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            CreatedOn = new DateTime(2024, 2, 29, 13, 17, 8, 174, DateTimeKind.Local).AddTicks(6601),
                            LastUpdated = new DateTime(2024, 2, 29, 13, 17, 8, 174, DateTimeKind.Local).AddTicks(6600),
                            Name = "Bussiness Laptop"
                        },
                        new
                        {
                            CategoryId = 2,
                            CreatedOn = new DateTime(2024, 2, 29, 13, 17, 8, 174, DateTimeKind.Local).AddTicks(6616),
                            LastUpdated = new DateTime(2024, 2, 29, 13, 17, 8, 174, DateTimeKind.Local).AddTicks(6615),
                            Name = "Gaming Laptop"
                        },
                        new
                        {
                            CategoryId = 3,
                            CreatedOn = new DateTime(2024, 2, 29, 13, 17, 8, 174, DateTimeKind.Local).AddTicks(6627),
                            LastUpdated = new DateTime(2024, 2, 29, 13, 17, 8, 174, DateTimeKind.Local).AddTicks(6627),
                            Name = "Working Laptop"
                        });
                });

            modelBuilder.Entity("AnyaStore.Services.ProductAPI.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"));

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Price")
                        .HasColumnType("float");

                    b.HasKey("ProductId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            CategoryId = 1,
                            CreatedOn = new DateTime(2024, 2, 29, 13, 17, 8, 174, DateTimeKind.Local).AddTicks(6533),
                            Description = "Ultrabook gaming",
                            ImageUrl = "https://placehold.co/603x403",
                            LastUpdated = new DateTime(2024, 2, 29, 13, 17, 8, 174, DateTimeKind.Local).AddTicks(6518),
                            Name = "Zephyrus g16",
                            Price = 15.0
                        },
                        new
                        {
                            ProductId = 2,
                            CategoryId = 2,
                            CreatedOn = new DateTime(2024, 2, 29, 13, 17, 8, 174, DateTimeKind.Local).AddTicks(6572),
                            Description = "Ultrabook for working",
                            ImageUrl = "https://placehold.co/603x403",
                            LastUpdated = new DateTime(2024, 2, 29, 13, 17, 8, 174, DateTimeKind.Local).AddTicks(6571),
                            Name = "Macbook pro 16 m3",
                            Price = 15.0
                        },
                        new
                        {
                            ProductId = 3,
                            CategoryId = 3,
                            CreatedOn = new DateTime(2024, 2, 29, 13, 17, 8, 174, DateTimeKind.Local).AddTicks(6585),
                            Description = "Ultrabook for business",
                            ImageUrl = "https://placehold.co/603x403",
                            LastUpdated = new DateTime(2024, 2, 29, 13, 17, 8, 174, DateTimeKind.Local).AddTicks(6585),
                            Name = "Dell XPS 16",
                            Price = 15.0
                        });
                });

            modelBuilder.Entity("AnyaStore.Services.ProductAPI.Models.Product", b =>
                {
                    b.HasOne("AnyaStore.Services.ProductAPI.Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("AnyaStore.Services.ProductAPI.Models.Category", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
